service: mastodonbot-reply

frameworkVersion: '2 || 3'

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  timeout: 10
  iam:
    role: mastodonReplyRole
functions:
  mastodon-reply:
    handler: lambda-mastodonreplies.handler
    events:
      # Invoke Lambda function every 5 mins
      - schedule: rate(15 minutes)
resources:
  Resources:
    mastodonbotRepliesDynamoDB: 
      Type: AWS::DynamoDB::Table
      Properties: 
        AttributeDefinitions: 
          - 
            AttributeName: "statusKey"
            AttributeType: "S"
        KeySchema: 
          - 
            AttributeName: "statusKey"
            KeyType: "HASH"
        ProvisionedThroughput: 
          ReadCapacityUnits: "1"
          WriteCapacityUnits: "1"
        TableName: "mastodonbotreplies"

    mastodonReplyRole:
      Type: 'AWS::IAM::Role'
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - 'sts:AssumeRole'
        ManagedPolicyArns:
          - arn:aws:iam::${aws:accountId}:policy/lambda-execution-log-access
        Path: /
        Policies:
          - PolicyName: iam-policy-mastodonbot-reply
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - "dynamodb:Scan"
                    - "dynamodb:Query"
                    - "dynamodb:UpdateItem"
                  Resource:
                    - "arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/mastodonbotreplies"
                    - "arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/mastodonbotreplies/index/Index"
